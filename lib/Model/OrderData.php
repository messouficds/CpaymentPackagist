<?php
/**
 * OrderData
 *
 * PHP version 5
 *
 * @category Class
 * @package  CpaymentConnector
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Payment Gateway
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.0.3
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace CpaymentConnector\Model;

use \ArrayAccess;
use \CpaymentConnector\ObjectSerializer;

/**
 * OrderData Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  CpaymentConnector
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class OrderData implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'OrderData';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'order_discount_amount' => 'int',
        'order_fees_amount' => 'int',
        'order_rows_amount' => 'int',
        'order_shipping_amount' => 'int',
        'tax_amount' => 'int',
        'free_text' => 'string',
        'orders' => '\CpaymentConnector\Model\SubOrder[]',
        'order_summary_ref' => 'string',
        'shipping_address' => '\CpaymentConnector\Model\ShippingAddress',
        'order_ref' => 'string',
        'invoice_id' => 'int',
        'order_tag' => 'string',
        'order_date' => '\DateTime',
        'amount' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'order_discount_amount' => 'int64',
        'order_fees_amount' => 'int64',
        'order_rows_amount' => 'int64',
        'order_shipping_amount' => 'int64',
        'tax_amount' => 'int64',
        'free_text' => null,
        'orders' => null,
        'order_summary_ref' => null,
        'shipping_address' => null,
        'order_ref' => null,
        'invoice_id' => 'int64',
        'order_tag' => null,
        'order_date' => 'date-time',
        'amount' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_discount_amount' => 'orderDiscountAmount',
        'order_fees_amount' => 'orderFeesAmount',
        'order_rows_amount' => 'orderRowsAmount',
        'order_shipping_amount' => 'orderShippingAmount',
        'tax_amount' => 'taxAmount',
        'free_text' => 'freeText',
        'orders' => 'orders',
        'order_summary_ref' => 'orderSummaryRef',
        'shipping_address' => 'shippingAddress',
        'order_ref' => 'orderRef',
        'invoice_id' => 'invoiceId',
        'order_tag' => 'orderTag',
        'order_date' => 'orderDate',
        'amount' => 'amount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_discount_amount' => 'setOrderDiscountAmount',
        'order_fees_amount' => 'setOrderFeesAmount',
        'order_rows_amount' => 'setOrderRowsAmount',
        'order_shipping_amount' => 'setOrderShippingAmount',
        'tax_amount' => 'setTaxAmount',
        'free_text' => 'setFreeText',
        'orders' => 'setOrders',
        'order_summary_ref' => 'setOrderSummaryRef',
        'shipping_address' => 'setShippingAddress',
        'order_ref' => 'setOrderRef',
        'invoice_id' => 'setInvoiceId',
        'order_tag' => 'setOrderTag',
        'order_date' => 'setOrderDate',
        'amount' => 'setAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_discount_amount' => 'getOrderDiscountAmount',
        'order_fees_amount' => 'getOrderFeesAmount',
        'order_rows_amount' => 'getOrderRowsAmount',
        'order_shipping_amount' => 'getOrderShippingAmount',
        'tax_amount' => 'getTaxAmount',
        'free_text' => 'getFreeText',
        'orders' => 'getOrders',
        'order_summary_ref' => 'getOrderSummaryRef',
        'shipping_address' => 'getShippingAddress',
        'order_ref' => 'getOrderRef',
        'invoice_id' => 'getInvoiceId',
        'order_tag' => 'getOrderTag',
        'order_date' => 'getOrderDate',
        'amount' => 'getAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_discount_amount'] = isset($data['order_discount_amount']) ? $data['order_discount_amount'] : null;
        $this->container['order_fees_amount'] = isset($data['order_fees_amount']) ? $data['order_fees_amount'] : null;
        $this->container['order_rows_amount'] = isset($data['order_rows_amount']) ? $data['order_rows_amount'] : null;
        $this->container['order_shipping_amount'] = isset($data['order_shipping_amount']) ? $data['order_shipping_amount'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['free_text'] = isset($data['free_text']) ? $data['free_text'] : null;
        $this->container['orders'] = isset($data['orders']) ? $data['orders'] : null;
        $this->container['order_summary_ref'] = isset($data['order_summary_ref']) ? $data['order_summary_ref'] : null;
        $this->container['shipping_address'] = isset($data['shipping_address']) ? $data['shipping_address'] : null;
        $this->container['order_ref'] = isset($data['order_ref']) ? $data['order_ref'] : null;
        $this->container['invoice_id'] = isset($data['invoice_id']) ? $data['invoice_id'] : null;
        $this->container['order_tag'] = isset($data['order_tag']) ? $data['order_tag'] : null;
        $this->container['order_date'] = isset($data['order_date']) ? $data['order_date'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['order_ref'] === null) {
            $invalidProperties[] = "'order_ref' can't be null";
        }
        if ($this->container['order_date'] === null) {
            $invalidProperties[] = "'order_date' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_discount_amount
     *
     * @return int|null
     */
    public function getOrderDiscountAmount()
    {
        return $this->container['order_discount_amount'];
    }

    /**
     * Sets order_discount_amount
     *
     * @param int|null $order_discount_amount Gets or sets the order discount amount.
     *
     * @return $this
     */
    public function setOrderDiscountAmount($order_discount_amount)
    {
        $this->container['order_discount_amount'] = $order_discount_amount;

        return $this;
    }

    /**
     * Gets order_fees_amount
     *
     * @return int|null
     */
    public function getOrderFeesAmount()
    {
        return $this->container['order_fees_amount'];
    }

    /**
     * Sets order_fees_amount
     *
     * @param int|null $order_fees_amount <para>               Gets or sets the order fees amount.              </para>
     *
     * @return $this
     */
    public function setOrderFeesAmount($order_fees_amount)
    {
        $this->container['order_fees_amount'] = $order_fees_amount;

        return $this;
    }

    /**
     * Gets order_rows_amount
     *
     * @return int|null
     */
    public function getOrderRowsAmount()
    {
        return $this->container['order_rows_amount'];
    }

    /**
     * Sets order_rows_amount
     *
     * @param int|null $order_rows_amount Gets or sets the order rows amount.
     *
     * @return $this
     */
    public function setOrderRowsAmount($order_rows_amount)
    {
        $this->container['order_rows_amount'] = $order_rows_amount;

        return $this;
    }

    /**
     * Gets order_shipping_amount
     *
     * @return int|null
     */
    public function getOrderShippingAmount()
    {
        return $this->container['order_shipping_amount'];
    }

    /**
     * Sets order_shipping_amount
     *
     * @param int|null $order_shipping_amount Gets or sets the order shipping amount.
     *
     * @return $this
     */
    public function setOrderShippingAmount($order_shipping_amount)
    {
        $this->container['order_shipping_amount'] = $order_shipping_amount;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return int|null
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param int|null $tax_amount Gets or sets the tax amount.
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets free_text
     *
     * @return string|null
     */
    public function getFreeText()
    {
        return $this->container['free_text'];
    }

    /**
     * Sets free_text
     *
     * @param string|null $free_text Gets or sets the free text.
     *
     * @return $this
     */
    public function setFreeText($free_text)
    {
        $this->container['free_text'] = $free_text;

        return $this;
    }

    /**
     * Gets orders
     *
     * @return \CpaymentConnector\Model\SubOrder[]|null
     */
    public function getOrders()
    {
        return $this->container['orders'];
    }

    /**
     * Sets orders
     *
     * @param \CpaymentConnector\Model\SubOrder[]|null $orders Gets or sets the orders.
     *
     * @return $this
     */
    public function setOrders($orders)
    {
        $this->container['orders'] = $orders;

        return $this;
    }

    /**
     * Gets order_summary_ref
     *
     * @return string|null
     */
    public function getOrderSummaryRef()
    {
        return $this->container['order_summary_ref'];
    }

    /**
     * Sets order_summary_ref
     *
     * @param string|null $order_summary_ref Gets or sets the order summary reference.
     *
     * @return $this
     */
    public function setOrderSummaryRef($order_summary_ref)
    {
        $this->container['order_summary_ref'] = $order_summary_ref;

        return $this;
    }

    /**
     * Gets shipping_address
     *
     * @return \CpaymentConnector\Model\ShippingAddress|null
     */
    public function getShippingAddress()
    {
        return $this->container['shipping_address'];
    }

    /**
     * Sets shipping_address
     *
     * @param \CpaymentConnector\Model\ShippingAddress|null $shipping_address shipping_address
     *
     * @return $this
     */
    public function setShippingAddress($shipping_address)
    {
        $this->container['shipping_address'] = $shipping_address;

        return $this;
    }

    /**
     * Gets order_ref
     *
     * @return string
     */
    public function getOrderRef()
    {
        return $this->container['order_ref'];
    }

    /**
     * Sets order_ref
     *
     * @param string $order_ref The order reference linked to the schedule and transaction
     *
     * @return $this
     */
    public function setOrderRef($order_ref)
    {
        $this->container['order_ref'] = $order_ref;

        return $this;
    }

    /**
     * Gets invoice_id
     *
     * @return int|null
     */
    public function getInvoiceId()
    {
        return $this->container['invoice_id'];
    }

    /**
     * Sets invoice_id
     *
     * @param int|null $invoice_id The invoice identifier
     *
     * @return $this
     */
    public function setInvoiceId($invoice_id)
    {
        $this->container['invoice_id'] = $invoice_id;

        return $this;
    }

    /**
     * Gets order_tag
     *
     * @return string|null
     */
    public function getOrderTag()
    {
        return $this->container['order_tag'];
    }

    /**
     * Sets order_tag
     *
     * @param string|null $order_tag The order tag is a label for the schedule
     *
     * @return $this
     */
    public function setOrderTag($order_tag)
    {
        $this->container['order_tag'] = $order_tag;

        return $this;
    }

    /**
     * Gets order_date
     *
     * @return \DateTime
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     *
     * @param \DateTime $order_date Date of the order
     *
     * @return $this
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return int
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param int $amount The amount of the payment
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


